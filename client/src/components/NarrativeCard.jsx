import React, { useState } from 'react';

const NarrativeCard = ({ story, loading = false, showActions = true }) => {
  const [isShared, setIsShared] = useState(false);

  const handleShare = () => {
    if (navigator.share && story) {
      navigator.share({
        title: story.title,
        text: story.content,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(`${story?.title}\n\n${story?.content}`);
      setIsShared(true);
      setTimeout(() => setIsShared(false), 2000);
    }
  };

  const generateArt = () => {
    // TODO: Integrate AI image generation
    console.log('Generating AI art for:', story?.location);
  };

  if (loading) {
    return (
      <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-lg p-6 animate-pulse">
        <div className="h-6 bg-gradient-to-r from-orange-200 to-red-200 rounded w-3/4 mb-4"></div>
        <div className="space-y-3">
          <div className="h-4 bg-gray-200 rounded w-full"></div>
          <div className="h-4 bg-gray-200 rounded w-5/6"></div>
          <div className="h-4 bg-gray-200 rounded w-4/5"></div>
        </div>
        <div className="mt-4 h-8 bg-gray-200 rounded w-1/3"></div>
      </div>
    );
  }

  if (!story) {
    return (
      <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-lg p-6 text-center">
        <div className="text-6xl mb-4">üó∫Ô∏è</div>
        <h3 className="text-lg font-semibold text-gray-700 mb-2">
          Ready to Explore?
        </h3>
        <p className="text-gray-500 text-sm">
          Click on the map or search for a location to discover its stories
        </p>
      </div>
    );
  }

  return (
    <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-lg overflow-hidden">
      {/* Story Header */}
      <div className="bg-gradient-to-r from-orange-500 to-red-500 p-4 text-white">
        <h3 className="text-xl font-bold mb-1">{story.title}</h3>
        {story.location && (
          <div className="flex items-center text-orange-100 text-sm">
            <span className="mr-1">üìç</span>
            {story.location}
          </div>
        )}
      </div>

      {/* Story Content */}
      <div className="p-6">
        <div className="prose prose-sm max-w-none text-gray-700 leading-relaxed mb-6">
          {story.content}
        </div>

        {/* Story Metadata */}
        {story.theme && (
          <div className="mb-4 text-xs text-gray-500">
            Theme: {story.theme}
          </div>
        )}

        {/* Action Buttons */}
        {showActions && (
          <div className="flex flex-wrap gap-2">
            <button
              onClick={handleShare}
              className="flex items-center space-x-2 px-3 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors text-sm"
            >
              <span>{isShared ? '‚úì' : 'üì§'}</span>
              <span>{isShared ? 'Copied!' : 'Share'}</span>
            </button>
            
            <button
              onClick={generateArt}
              className="flex items-center space-x-2 px-3 py-2 bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition-colors text-sm"
            >
              <span>üé®</span>
              <span>Generate Art</span>
            </button>
            
            <button className="flex items-center space-x-2 px-3 py-2 bg-green-100 text-green-700 rounded-lg hover:bg-green-200 transition-colors text-sm">
              <span>üíæ</span>
              <span>Save</span>
            </button>
          </div>
        )}

        {/* Story Stats */}
        <div className="mt-4 pt-4 border-t border-gray-100 flex justify-between text-xs text-gray-400">
          <span>Generated by AI</span>
          <span>{new Date().toLocaleDateString()}</span>
        </div>
      </div>
    </div>
  );
};

export default NarrativeCard;
