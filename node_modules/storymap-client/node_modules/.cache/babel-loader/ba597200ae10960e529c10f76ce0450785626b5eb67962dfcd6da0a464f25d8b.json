{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\StoryMap.ai\\\\client\\\\src\\\\contexts\\\\LocationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationContext = /*#__PURE__*/createContext();\nexport const useLocationContext = () => {\n  _s();\n  const context = useContext(LocationContext);\n  if (!context) {\n    throw new Error('useLocationContext must be used within a LocationProvider');\n  }\n  return context;\n};\n_s(useLocationContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LocationProvider = ({\n  children\n}) => {\n  _s2();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [selectedStory, setSelectedStory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Load location from URL params on mount\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const locationData = params.get('location');\n    if (locationData && !selectedLocation) {\n      try {\n        const parsedLocation = JSON.parse(decodeURIComponent(locationData));\n        setSelectedLocation(parsedLocation);\n      } catch (error) {\n        console.error('Failed to parse location from URL:', error);\n      }\n    }\n  }, [location.search, selectedLocation]);\n  const updateLocation = newLocation => {\n    setSelectedLocation(newLocation);\n    setError('');\n\n    // Update URL with location data\n    if (newLocation) {\n      const params = new URLSearchParams(location.search);\n      params.set('location', encodeURIComponent(JSON.stringify(newLocation)));\n      const newUrl = `${location.pathname}?${params.toString()}`;\n      window.history.replaceState(null, '', newUrl);\n    }\n  };\n  const navigateWithLocation = path => {\n    if (selectedLocation) {\n      const params = new URLSearchParams();\n      params.set('location', encodeURIComponent(JSON.stringify(selectedLocation)));\n      navigate(`${path}?${params.toString()}`);\n    } else {\n      navigate(path);\n    }\n  };\n  const clearLocation = () => {\n    setSelectedLocation(null);\n    setSelectedStory(null);\n    setError('');\n\n    // Remove location from URL\n    const params = new URLSearchParams(location.search);\n    params.delete('location');\n    const newUrl = params.toString() ? `${location.pathname}?${params.toString()}` : location.pathname;\n    window.history.replaceState(null, '', newUrl);\n  };\n  const value = {\n    selectedLocation,\n    selectedStory,\n    loading,\n    error,\n    setSelectedStory,\n    setLoading,\n    setError,\n    updateLocation,\n    navigateWithLocation,\n    clearLocation\n  };\n  return /*#__PURE__*/_jsxDEV(LocationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(LocationProvider, \"40U75WtXjPMY8gFasAsq3inHzGY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LocationProvider;\nvar _c;\n$RefreshReg$(_c, \"LocationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","LocationContext","useLocationContext","_s","context","Error","LocationProvider","children","_s2","selectedLocation","setSelectedLocation","selectedStory","setSelectedStory","loading","setLoading","error","setError","navigate","location","params","URLSearchParams","search","locationData","get","parsedLocation","JSON","parse","decodeURIComponent","console","updateLocation","newLocation","set","encodeURIComponent","stringify","newUrl","pathname","toString","window","history","replaceState","navigateWithLocation","path","clearLocation","delete","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/StoryMap.ai/client/src/contexts/LocationContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst LocationContext = createContext();\n\nexport const useLocationContext = () => {\n  const context = useContext(LocationContext);\n  if (!context) {\n    throw new Error('useLocationContext must be used within a LocationProvider');\n  }\n  return context;\n};\n\nexport const LocationProvider = ({ children }) => {\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [selectedStory, setSelectedStory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Load location from URL params on mount\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const locationData = params.get('location');\n    \n    if (locationData && !selectedLocation) {\n      try {\n        const parsedLocation = JSON.parse(decodeURIComponent(locationData));\n        setSelectedLocation(parsedLocation);\n      } catch (error) {\n        console.error('Failed to parse location from URL:', error);\n      }\n    }\n  }, [location.search, selectedLocation]);\n\n  const updateLocation = (newLocation) => {\n    setSelectedLocation(newLocation);\n    setError('');\n    \n    // Update URL with location data\n    if (newLocation) {\n      const params = new URLSearchParams(location.search);\n      params.set('location', encodeURIComponent(JSON.stringify(newLocation)));\n      const newUrl = `${location.pathname}?${params.toString()}`;\n      window.history.replaceState(null, '', newUrl);\n    }\n  };\n\n  const navigateWithLocation = (path) => {\n    if (selectedLocation) {\n      const params = new URLSearchParams();\n      params.set('location', encodeURIComponent(JSON.stringify(selectedLocation)));\n      navigate(`${path}?${params.toString()}`);\n    } else {\n      navigate(path);\n    }\n  };\n\n  const clearLocation = () => {\n    setSelectedLocation(null);\n    setSelectedStory(null);\n    setError('');\n    \n    // Remove location from URL\n    const params = new URLSearchParams(location.search);\n    params.delete('location');\n    const newUrl = params.toString() ? `${location.pathname}?${params.toString()}` : location.pathname;\n    window.history.replaceState(null, '', newUrl);\n  };\n\n  const value = {\n    selectedLocation,\n    selectedStory,\n    loading,\n    error,\n    setSelectedStory,\n    setLoading,\n    setError,\n    updateLocation,\n    navigateWithLocation,\n    clearLocation\n  };\n\n  return (\n    <LocationContext.Provider value={value}>\n      {children}\n    </LocationContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}